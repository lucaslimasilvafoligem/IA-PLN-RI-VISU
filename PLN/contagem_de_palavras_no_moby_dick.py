# -*- coding: utf-8 -*-
"""Cópia de Contagem de Palavras no Moby Dick.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OxBtYMR18beLmF02JmiHV0hPgmn8qksK

O código deste notebook é baseado em: https://www.datacamp.com/projects/38
"""

import requests
from bs4 import BeautifulSoup
import nltk
from nltk.util import bigrams

r = requests.get("https://www.gutenberg.org/cache/epub/29484/pg29484-images.html")

r.encoding = 'utf-8'

html = r.text

print(html[0:2000])

soup = BeautifulSoup(html, 'html.parser')

text = soup.get_text()

print(text[32000:34000])

tokenizer = nltk.tokenize.RegexpTokenizer('\w+')

tokens = tokenizer.tokenize(text)

print(tokens[0:8])

words = []

for word in tokens:
  words.append(word.lower())

print(words[0:50])

from nltk.corpus import stopwords
nltk.download('stopwords')
sw = stopwords.words('portuguese')

words_ns =  [word for word in words if word not in sw]

print(words_ns[0:100])

freqdist = nltk.FreqDist(words_ns)

freqdist

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

freqdist.plot(500)

# Commented out IPython magic to ensure Python compatibility.
#Parte da questão 6

textBigramas = list(bigrams(words_ns))
print(textBigramas)

freqdistBigramas = nltk.FreqDist(textBigramas)

# %matplotlib inline

freqdistBigramas.plot(500)